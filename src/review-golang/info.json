[
  {
    "link": "/review-golang/10010000000000001.md",
    "text": "第一个问题测试"
  },
  {
    "link": "/review-golang/10010000000000004.md",
    "text": "golang中的协程是什么？"
  },
  {
    "link": "/review-golang/10010000000000008.md",
    "text": "golang中的协程是如何进行调度的？"
  },
  {
    "link": "/review-golang/10010000000000011.md",
    "text": "golang中有哪些方式可以拼接字符串？"
  },
  {
    "link": "/review-golang/10010000000000014.md",
    "text": "golang的异常是如何处理的，有异常类型吗？"
  },
  {
    "link": "/review-golang/10010000000000017.md",
    "text": "golang中的defer是什么？"
  },
  {
    "link": "/review-golang/10010000000000019.md",
    "text": "golang中的tag是什么？"
  },
  {
    "link": "/review-golang/10010000000000021.md",
    "text": "golang中的哪些数据类型和结构支持比较？"
  },
  {
    "link": "/review-golang/10010000000000024.md",
    "text": "golang中空struct{}的用途"
  },
  {
    "link": "/review-golang/10010000000000026.md",
    "text": "golang中的init函数是在什么时候执行的？"
  },
  {
    "link": "/review-golang/10010000000000028.md",
    "text": "golang中，如何判断一个对象是分配在堆上还是分配在栈上？"
  },
  {
    "link": "/review-golang/10010000000000030.md",
    "text": "golang中的两个interface可以比较吗？"
  },
  {
    "link": "/review-golang/10010000000000032.md",
    "text": "go语言垃圾回收的工作原理"
  }
]